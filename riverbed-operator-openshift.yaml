apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
    control-plane: controller-manager
  name: riverbed-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: riverbedoperators.operator.riverbed
spec:
  group: operator.riverbed
  names:
    kind: RiverbedOperator
    listKind: RiverbedOperatorList
    plural: riverbedoperators
    singular: riverbedoperator
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: RiverbedOperator is the Schema for the riverbedoperators API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RiverbedOperatorSpec defines the desired state of RiverbedOperator
            properties:
              analysisServerHost:
                description: The system name, fully-qualified domain name (FQDN),
                  or IP address for the analysis server in your environment.
                type: string
              analysisServerPort:
                description: |-
                  Analysis Server port
                  Defaults to 443.
                format: int32
                type: integer
              apmAgent:
                description: Apm Agent specific configuration
                properties:
                  configName:
                    description: |-
                      The default configuration used by instrumented applications.
                      Default is "default config"
                    type: string
                  containerMetrics:
                    description: |-
                      Whether container metrics are collected by the agent.
                      Optional: Default to false.
                    type: boolean
                  hostMetrics:
                    description: |-
                      Whether host OS metrics are collected by the agent.
                      Optional: Default to true.
                    type: boolean
                  javaMetrics:
                    description: |-
                      Whether java metrics are collected by the agent.
                      Optional: Default to true.
                    type: boolean
                  logicalServer:
                    description: |-
                      Special logical server tag that is associated with all nodes in the cluster.
                      Default is ""
                    type: string
                  maxInstrLogs:
                    description: |-
                      Maximum number of instrumentation logs kept on the agent.
                      Defaults to 500.
                    format: int32
                    type: integer
                  processMetrics:
                    description: |-
                      Whether process metrics are collected by the agent.
                      Optional: Default to false.
                    type: boolean
                  resources:
                    description: |-
                      Compute Resources required by this container.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  securityContext:
                    description: 'Optional: SecurityContext defines the security options
                      the ephemeral container should be run with.'
                    properties:
                      allowPrivilegeEscalation:
                        description: |-
                          AllowPrivilegeEscalation controls whether a process can gain more
                          privileges than its parent process. This bool directly controls if
                          the no_new_privs flag will be set on the container process.
                          AllowPrivilegeEscalation is true always when the container is:
                          1) run as Privileged
                          2) has CAP_SYS_ADMIN
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      appArmorProfile:
                        description: |-
                          appArmorProfile is the AppArmor options to use by this container. If set, this profile
                          overrides the pod's appArmorProfile.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: |-
                              localhostProfile indicates a profile loaded on the node that should be used.
                              The profile must be preconfigured on the node to work.
                              Must match the loaded name of the profile.
                              Must be set if and only if type is "Localhost".
                            type: string
                          type:
                            description: |-
                              type indicates which kind of AppArmor profile will be applied.
                              Valid options are:
                                Localhost - a profile pre-loaded on the node.
                                RuntimeDefault - the container runtime's default profile.
                                Unconfined - no AppArmor enforcement.
                            type: string
                        required:
                        - type
                        type: object
                      capabilities:
                        description: |-
                          The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the container runtime.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      privileged:
                        description: |-
                          Run container in privileged mode.
                          Processes in privileged containers are essentially equivalent to root on the host.
                          Defaults to false.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: |-
                          procMount denotes the type of proc mount to use for the containers.
                          The default value is Default which uses the container runtime defaults for
                          readonly paths and masked paths.
                          This requires the ProcMountType feature flag to be enabled.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: |-
                          Whether this container has a read-only root filesystem.
                          Default is false.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: |-
                          The GID to run the entrypoint of the container process.
                          Uses runtime default if unset.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: |-
                          Indicates that the container must run as a non-root user.
                          If true, the Kubelet will validate the image at runtime to ensure that it
                          does not run as UID 0 (root) and fail to start the container if it does.
                          If unset or false, no such validation will be performed.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: |-
                          The UID to run the entrypoint of the container process.
                          Defaults to user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: |-
                          The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random SELinux context for each
                          container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: |-
                          The seccomp options to use by this container. If seccomp options are
                          provided at both the pod & container level, the container options
                          override the pod options.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: |-
                              localhostProfile indicates a profile defined in a file on the node should be used.
                              The profile must be preconfigured on the node to work.
                              Must be a descending path, relative to the kubelet's configured seccomp profile location.
                              Must be set if type is "Localhost". Must NOT be set for any other type.
                            type: string
                          type:
                            description: |-
                              type indicates which kind of seccomp profile will be applied.
                              Valid options are:

                              Localhost - a profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile should be used.
                              Unconfined - no profile should be applied.
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: |-
                          The Windows specific settings applied to all containers.
                          If unspecified, the options from the PodSecurityContext will be used.
                          If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is linux.
                        properties:
                          gmsaCredentialSpec:
                            description: |-
                              GMSACredentialSpec is where the GMSA admission webhook
                              (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                              GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: |-
                              HostProcess determines if a container should be run as a 'Host Process' container.
                              All of a Pod's containers must have the same effective HostProcess value
                              (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                              In addition, if HostProcess is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: |-
                              The UserName in Windows to run the entrypoint of the container process.
                              Defaults to the user specified in image metadata if unspecified.
                              May also be set in PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: string
                        type: object
                    type: object
                type: object
              conditions:
                description: This might be garbage.
                items:
                  type: string
                type: array
              customerId:
                description: SaaS customer ID.
                type: string
              proxyServerHost:
                description: |-
                  The system name, fully-qualified domain name (FQDN), or IP address for the proxy server in your environment.
                  Optional: Default to "" which indicate is proxy is not used.
                type: string
              proxyServerPort:
                description: |-
                  Proxy server port
                  Defaults to 443.
                format: int32
                type: integer
              reporterEnabled:
                description: |-
                  Whether the Reporter should be run
                  Default to false.
                type: boolean
            required:
            - analysisServerHost
            type: object
          status:
            description: RiverbedOperatorStatus defines the observed state of RiverbedOperator
            properties:
              conditions:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
  name: riverbed-operator-controller-manager
  namespace: riverbed-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
  name: riverbed-operator-leader-election-role
  namespace: riverbed-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: riverbed-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operator.riverbed
  resources:
  - riverbedoperators
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.riverbed
  resources:
  - riverbedoperators/finalizers
  verbs:
  - update
- apiGroups:
  - operator.riverbed
  resources:
  - riverbedoperators/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: riverbed-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: riverbed-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
  name: riverbed-operator-riverbedoperator-editor-role
rules:
- apiGroups:
  - operator.riverbed
  resources:
  - riverbedoperators
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.riverbed
  resources:
  - riverbedoperators/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
  name: riverbed-operator-riverbedoperator-viewer-role
rules:
- apiGroups:
  - operator.riverbed
  resources:
  - riverbedoperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operator.riverbed
  resources:
  - riverbedoperators/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scc-privileged-granter
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
  name: riverbed-operator-leader-election-rolebinding
  namespace: riverbed-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: riverbed-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: riverbed-operator-controller-manager
  namespace: riverbed-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
  name: riverbed-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riverbed-operator-manager-role
subjects:
- kind: ServiceAccount
  name: riverbed-operator-controller-manager
  namespace: riverbed-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: riverbed-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riverbed-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: riverbed-operator-controller-manager
  namespace: riverbed-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: riverbed-operator-privileged-granter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scc-privileged-granter
subjects:
- kind: ServiceAccount
  name: riverbed-operator-controller-manager
  namespace: riverbed-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
    control-plane: controller-manager
  name: riverbed-operator-controller-manager-metrics-service
  namespace: riverbed-operator
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: riverbed-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: riverbed-operator
  name: riverbed-operator-webhook-service
  namespace: riverbed-operator
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: riverbed-operator
    control-plane: controller-manager
  name: riverbed-operator-controller-manager
  namespace: riverbed-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        env:
        - name: RVBD_JAVA_INSTRUMENTATION_IMAGE
          value: riverbed/riverbed-java-instrumentation:2.0.1-1
        - name: RVBD_DOTNET_INSTRUMENTATION_IMAGE
          value: riverbed/riverbed-dotnet-instrumentation:2.0.1-1
        - name: RVBD_APM_AGENT_IMAGE
          value: riverbed/riverbed-apm-agent:2.0.1-1
        image: riverbed/riverbed-operator:2.0.1-9
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: riverbed-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: riverbed-operator
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: riverbed-operator
  name: riverbed-operator-serving-cert
  namespace: riverbed-operator
spec:
  dnsNames:
  - riverbed-operator-webhook-service.riverbed-operator.svc
  - riverbed-operator-webhook-service.riverbed-operator.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: riverbed-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: riverbed-operator
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: issuer
    app.kubernetes.io/part-of: riverbed-operator
  name: riverbed-operator-selfsigned-issuer
  namespace: riverbed-operator
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: riverbed-operator/riverbed-operator-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: riverbed-operator
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: riverbed-operator
  name: riverbed-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: riverbed-operator-webhook-service
      namespace: riverbed-operator
      path: /mutate--v1-pod
  failurePolicy: Ignore
  name: mpod-v1.kb.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
